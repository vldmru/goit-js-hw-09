{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvCOO,SAASC,cAAc,SAE/BC,iBAAiB,UAE7B,SAA6BC,GAC3BA,EAAMC,iBAEN,MACEC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,OACV,IAAIC,EAAkBC,OAAOL,EAAMM,OACnC,MAAMC,EAAiBF,OAAOJ,EAAKK,OAC7BE,EAAgBH,OAAOH,EAAOI,OAEpC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAeC,GAAK,EACvCxB,EAAcwB,EAAGL,GACdM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAW,CAC5D0B,SAAO,GACT,IAEHC,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOI,QAAQ,sBAAoB7B,QAAeC,MAAW,CAC3D0B,SAAS,GACT,IAENT,GAAmBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst promiseForm = document.querySelector('.form');\n\npromiseForm.addEventListener('submit', onPromiseFormSubmit);\n\nfunction onPromiseFormSubmit(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.target;\n  let firstDelayValue = Number(delay.value);\n  const stepDelayValue = Number(step.value);\n  const amountOfDelay = Number(amount.value);\n\n  for (let i = 1; i <= amountOfDelay; i += 1) {\n    createPromise(i, firstDelayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          useIcon: false,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          useIcon: false,\n        });\n      });\n    firstDelayValue += stepDelayValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","target","firstDelayValue","Number","value","stepDelayValue","amountOfDelay","i","then","Notify","success","useIcon","catch","failure"],"version":3,"file":"03-promises.e94e5e1e.js.map"}